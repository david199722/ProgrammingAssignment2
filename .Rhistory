1+1
example <- matrix(c(1, 2, 3, 4, 5, 6, 7, 8), nrow = 4, ncol = 2)
View(example)
1+1
install.packages("ggplot2")
library(ggplot2)
installed.package()
installed.packages()
old.packages()
detach("package:ggplot2", unload=TRUE)
version
sessionInfo()
help(package="ggplot2")
browseVignettes("ggplot2")
install.packages("devtools")
library(devtools)
help(package="devtools")
help(package="devtools")
install.package("KernSmooth")
install.packages("KernSmooth")
library(KernSmooth)
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(flags,class)
cls_vect<-sapply(flags,class)
cls_vect
class(cls_vect)
sum(flags$orange)
flags_colors<-flags[,11:17]
flag_colors<-flags[,11:17]
head(flag_colors)
View(flags_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors,mean)
flag_shapes<-flags[,19:23]
lapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals<-lapply(flags,unique_vals)
unique_vals<-lapply(flags,unique)
unique_vals
apply(unique_vals,length)
lapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals,function(elem) elem[2])
sapply(flags, unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
?table
table(flags?animate)
table(flags?animate)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean )
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
library(datasets)
data(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
with(mtcars, tapply(mpg, cyl, mean))
View(mtcars)
View(mtcars)
tapply(mtcars$hp, mtcars$cyl, mean)
x<-tapply(mtcars$hp, mtcars$cyl, mean)
x[1]-x[3]
?debug
?set
?set
??set
?<<-
setwd("C:/Users/david/Desktop/Passingment_2")
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
makeVector(1:5)
makeVector(1:5)
Prueba<-makeVector(1:5)
Prueba$get()
Prueba$getmean()
Prueba$setmean(5)
Prueba$getmean()
Prueba$set(1:6)
Prueba$getmean()
cachemean(aVector)
cachemean(Prueba)
Prueba$setmean(5)
cachemean(Prueba)
m1 <- matrix(c(1/2, -1/4, -1, 3/4), nrow = 2, ncol = 2)
rm.Prueba
rm(Prueba)
m1
solve(m1)
i1<-solve(m1)
i1%*%m1
x = numeric()
x = matrix()
View(x)
View(x)
x = numeric()
View(x)
View(x)
View(x)
x = numeric()
x = matrix()
makeCacheMatrix <- function(x = matrix()) {
i <- NULL
set <- function(y) {
x <<- y
i <<- NULL
}
get <- function() x
setinv <- function(solve) m <<- solve
getinv <- function() i
list(set = set, get = get,
setinv = setinv,
getinv = getinv)
}
makeCacheMatrix(m1)
aMatrix<-makeCacheMatrix(m1)
aMatrix$get()
cacheSolve <- function(x, ...) {
i <- x$getinv()
if(!is.null(i)) {
message("getting cached data")
return(i)
}
data <- x$get()
i <- solve(data, ...)
x$setinv(i)
i
cacheSolve <- function(x, ...) {
i <- x$getinv()
if(!is.null(i)) {
message("getting cached data")
return(i)
}
data <- x$get()
i <- solve(data, ...)
x$setinv(i)
i
}
s
cacheSolve <- function(x, ...) {
i <- x$getinv()
if(!is.null(i)) {
message("getting cached data")
return(i)
}
data <- x$get()
i <- solve(data, ...)
x$setinv(i)
i
}
cacheSolve <- function(x, ...) {
i <- x$getinv()
if(!is.null(i)) {
message("getting cached data")
return(i)
}
data <- x$get()
i <- solve(data, ...)
x$setinv(i)
i
}
cacheSolve <- function(x, ...) {
i <- x$getinv()
if(!is.null(i)) {
message("getting cached data")
return(i)
}
data <- x$get()
i <- solve(data, ...)
x$setinv(i)
i
}
makeCacheMatrix <- function(x = matrix()) {
i <- NULL
set <- function(y) {
x <<- y
i <<- NULL
}
get <- function() x
setinv <- function(solve) m <<- solve
getinv <- function() i
list(set = set, get = get,
setinv = setinv,
getinv = getinv)
}
View(aMatrix)
x<-1
z-1
q
Q
+
?+
cacheSolve <- function(x, ...) {
i <- x$getinv()
if(!is.null(i)) {
message("getting cached data")
return(i)
}
data <- x$get()
i <- solve(data, ...)
x$setinv(i)
i
}
cacheSolve(aMatrix)
aMatrix$getinv()
aMatrix$get()
aMatrix$getinv()
cacheSolve(aMatrix)
cacheSolve(aMatrix)
makeCacheMatrix <- function(x = matrix()) {
i <- NULL
set <- function(y) {
x <<- y
i <<- NULL
}
get <- function() x
setinv <- function(solve) m <<- solve
getinv <- function() i
list(set = set, get = get,
setinv = setinv,
getinv = getinv)
}
cacheSolve <- function(x, ...) {
i <- x$getinv()
if(!is.null(i)) {
message("getting cached data")
return(i)
}
data <- x$get()
i <- solve(data, ...)
x$setinv(i)
i
}
makeCacheMatrix(m1)
aMatrix<-makeCacheMatrix(m1)
aMatrix$get()
aMatrix$getinv()
cacheSolve(aMatrix)
cacheSolve(aMatrix)
aMatrix$getinv()
makeCacheMatrix <- function(x = matrix()) {
i <- NULL
set <- function(y) {
x <<- y
i <<- NULL
}
get <- function() x
setinv <- function(solve) i <<- solve
getinv <- function() i
list(set = set, get = get,
setinv = setinv,
getinv = getinv)
}
cacheSolve <- function(x, ...) {
i <- x$getinv()
if(!is.null(i)) {
message("getting cached data")
return(i)
}
data <- x$get()
i <- solve(data, ...)
x$setinv(i)
i
}
cacheSolve(aMatrix)
cacheSolve(aMatrix)
aMatrix$getinv()
makeCacheMatrix(m1)
aMatrix<-makeCacheMatrix(m1)
aMatrix$get()
aMatrix$setinv()
aVector<-makeVector(1:5)
aVector$setmean()
aMatrix$getinv()
cacheSolve(aMatrix)
aMatrix$getinv()
cacheSolve()
cacheSolve(aMatrix)
n2 <- matrix(c(5/8, -1/8, -7/8, 3/8), nrow = 2, ncol = 2)myMatrix_object$set(n2)
n2 <- matrix(c(5/8, -1/8, -7/8, 3/8), nrow = 2, ncol = 2) myMatrix_object$set(n2)
n2 <- matrix(c(5/8, -1/8, -7/8, 3/8), nrow = 2, ncol = 2)
aMatrix$set(n2)
aMatrix$get()
cacheSolve(aMatrix)
aMatrix$getinv()
cacheSolve(aMatrix)
setwd("~/GitHub/ProgrammingAssignment2")
length(522222dd1c769c99b0add175c945044db9593a07)
x<-522222dd1c769c99b0add175c945044db9593a07
s<-"522222dd1c769c99b0add175c945044db9593a07"
length(s)
